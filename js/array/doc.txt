Array (massivlər) reference type verilənlərdir və bu, stringlərdən (primitive tip) fərqlidir
Array, -də reference type verilənlərdən biridir və bir neçə qiyməti eyni tipdə və ya fərqli tipdə saxlayan verilənlər strukturu kimi işləyir.
 Array-lər sıralı verilənlər toplusudur və onları indeklər vasitəsilə idarə edə bilərik.
 -də massivlər heap yaddaşında saxlanılır. Yəni massivlər bir reference (istinad) növü olduğu üçün onları yaddaşda saxladıqda, həmin massiv obyekt olaraq heap yaddaşında saxlanılır və massivə verilən istinad (reference) stack yaddaşında yerləşir.
  Bu o deməkdir ki, bir massivə istinad edilərkən, massivdən yalnız onun istinadı (yəni yerləşdiyi yer) saxlanır.
  Massiv metodları:
push(): Massivin sonuna yeni elementlər əlavə edir.
pop(): Massivin sonundakı elementi silir.
shift(): Massivin başındakı elementi silir.
unshift(): Massivin əvvəlinə yeni elementlər əlavə edir.
splice(): Hər hansı bir mövqedə elementlər əlavə edir və ya silir.
let arr = [1, 2, 3, 4];
arr.splice(2, 1, 5, 6);  // [1, 2, 5, 6, 4] index delete add

slice(): Massivin müəyyən bir hissəsini çıxarır.

let arr = [1, 2, 3, 4, 5];
let newArr = arr.slice(1, 3);  // [2, 3]

concat(): Bir neçə massiv birləşdirir.

let arr1 = [1, 2];
let arr2 = [3, 4];
let newArr = arr1.concat(arr2);  // [1, 2, 3, 4]

indexOf(): Massivdə müəyyən bir dəyərin indeksini tapır.
Əsas dəyişdirən metodlar:

push(): Massivin sonuna bir və ya bir neçə element əlavə edir.



let arr = [1, 2, 3];
arr.push(4);  // [1, 2, 3, 4]
pop(): Massivin sonundakı elementi çıxarır.



let arr = [1, 2, 3];
arr.pop();  // [1, 2]
shift(): Massivin əvvəlinə element çıxarır.



let arr = [1, 2, 3];
arr.shift();  // [2, 3]
unshift(): Massivin əvvəlinə bir və ya bir neçə element əlavə edir.



let arr = [1, 2, 3];
arr.unshift(0);  // [0, 1, 2, 3]
splice(): Massivin müəyyən bir indeksindən başlayaraq elementləri silir və ya yeni elementlər əlavə edir.



let arr = [1, 2, 3, 4];
arr.splice(1, 2, 5, 6);  // [1, 5, 6, 4] (2-ci və 3-cü elementləri dəyişdirir)
sort(): Massivi sıraya düzür (alfabetik və ya sayısal olaraq).



let arr = [3, 1, 2];
arr.sort();  // [1, 2, 3]
reverse(): Massivin elementlərini tərsinə çevirir.



let arr = [1, 2, 3];
arr.reverse();  // [3, 2, 1]
Değişdirməyən (Non-mutating) Metodlar:
Bu metodlar orijinal massivi dəyişdirmir, bunun əvəzinə, yeni bir massiv yaradırlar. Orijinal massiv heç bir dəyişiklik görmür.

Əsas dəyişdirməyən metodlar:

concat(): Bir neçə massivi birləşdirir və yeni bir massiv yaradır.



let arr1 = [1, 2];
let arr2 = [3, 4];
let newArr = arr1.concat(arr2);  // [1, 2, 3, 4]
slice(): Massivin müəyyən bir hissəsini çıxarır və yeni bir massiv qaytarır.



let arr = [1, 2, 3, 4];
let newArr = arr.slice(1, 3);  // [2, 3]
map(): Massivdəki hər bir elementə müəyyən bir əməliyyat tətbiq edir və nəticədə yeni bir massiv qaytarır.



let arr = [1, 2, 3];
let newArr = arr.map(x => x * 2);  // [2, 4, 6]
filter(): Şərtə uyğun gələn elementləri seçir və yeni bir massiv qaytarır.



let arr = [1, 2, 3, 4];
let newArr = arr.filter(x => x % 2 === 0);  // [2, 4]
reduce(): Massiv üzərində əməliyyatları tək bir dəyərə endirir (toplama, vurma və s.).



let arr = [1, 2, 3, 4];
let sum = arr.reduce((acc, curr) => acc + curr, 0);  // 10
join(): Massivdəki elementləri müəyyən bir ayrıcı ilə birləşdirir və bir string qaytarır.



let arr = ['a', 'b', 'c'];
let str = arr.join('-');  // "a-b-c"
indexOf(): Massivdə müəyyən bir dəyərin ilk tapıldığı indeksi qaytarır.



let arr = [1, 2, 3];
let index = arr.indexOf(2);  // 1
find(): Massivdə müəyyən bir şərtə uyğun gələn ilk elementi tapır.



let arr = [1, 2, 3, 4];
let found = arr.find(x => x > 2);  // 3


Birbaşa Təyin Etmə (Literal Syntax):



let arr = [1, 2, 3, 4];
new Array() ilə:



let arr = new Array(1, 2, 3, 4);  // [1, 2, 3, 4]
let emptyArr = new Array(5);      // [undefined, undefined, undefined, undefined, undefined]
Array.of() ilə:



let arr = Array.of(1, 2, 3); // [1, 2, 3]
Array.from() ilə: Bu metod başqa bir array və ya array-like obyektindən yeni massiv yaradır.



let str = 'hello';
let arr = Array.from(str); // ['h', 'e', 'l', 'l', 'o']
Spread Operator (...) ilə:



let arr1 = [1, 2, 3];
let arr2 = [...arr1];  // [1, 2, 3]

1. push()
İşləmə: Massivin sonuna bir və ya bir neçə element əlavə edir.

Qaytarılan dəyər: Yeni massivin uzunluğunu qaytarır.



let arr = [1, 2, 3];
let newLength = arr.push(4); // [1, 2, 3, 4]
console.log(newLength);  // 4
Nəticə: push() metodu massivə yeni element əlavə etdikdən sonra yeni massiv uzunluğunu qaytarır.

2. shift()
İşləmə: Massivin ilk elementini silir və qalan elementləri sola keçirir.

Qaytarılan dəyər: Silinən ilk elementi qaytarır.



let arr = [1, 2, 3];
let removedElement = arr.shift(); // [2, 3]
console.log(removedElement);  // 1
Nəticə: shift() metodu massivdən ilk elementi silir və o elementin dəyərini qaytarır. Massivin ilk elementi silindikdən sonra qalan elementlər sola doğru keçir.

3. pop()
İşləmə: Massivin sonuncu elementini silir.

Qaytarılan dəyər: Silinən sonuncu elementi qaytarır.



let arr = [1, 2, 3];
let removedElement = arr.pop(); // [1, 2]
console.log(removedElement);  // 3
Nəticə: pop() metodu massivdən sonuncu elementi silir və o elementin dəyərini qaytarır.

4. unshift()
İşləmə: Massivin əvvəlinə bir və ya bir neçə element əlavə edir.

Qaytarılan dəyər: Yeni massivin uzunluğunu qaytarır.



let arr = [1, 2, 3];
let newLength = arr.unshift(0); // [0, 1, 2, 3]
console.log(newLength);  // 4
Nəticə: unshift() metodu massivə yeni elementlər əlavə etdikdən sonra yeni massiv uzunluğunu qaytarır.

5. splice()
İşləmə: Massivin müəyyən bir hissəsini silir və ya yeni elementlər əlavə edir.

Qaytarılan dəyər: Silinən elementlərin bir massivini qaytarır.



let arr = [1, 2, 3, 4];
let removedElements = arr.splice(1, 2, 5, 6); // [1, 5, 6, 4]
console.log(removedElements);  // [2, 3]
Nəticə: splice() metodu massivdən müəyyən bir hissəni silir və həmin hissəni bir massiv şəklində qaytarır.

6. concat()
İşləmə: Bir və ya bir neçə massiv və ya elementləri birləşdirir.

Qaytarılan dəyər: Yeni bir massiv qaytarır.



let arr1 = [1, 2];
let arr2 = [3, 4];
let combinedArr = arr1.concat(arr2); // [1, 2, 3, 4]
console.log(combinedArr);  // [1, 2, 3, 4]
Nəticə: concat() metodu massivləri birləşdirərək yeni bir massiv qaytarır.

7. join()
İşləmə: Massivin bütün elementlərini müəyyən bir ayrıcı ilə birləşdirir və string qaytarır.

Qaytarılan dəyər: Birləşdirilmiş stringi qaytarır.



let arr = ['a', 'b', 'c'];
let result = arr.join('-'); // "a-b-c"
console.log(result);  // "a-b-c"
Nəticə: join() metodu massiv elementlərini birləşdirərək bir string qaytarır.

8. slice()
İşləmə: Massivin müəyyən bir hissəsini çıxarır.

Qaytarılan dəyər: Yeni bir massiv qaytarır.



let arr = [1, 2, 3, 4];
let newArr = arr.slice(1, 3); // [2, 3]
console.log(newArr);  // [2, 3]
Nəticə: slice() metodu orijinal massivdən müəyyən bir hissə çıxarır və yeni massiv qaytarır.

9. indexOf()
İşləmə: Massivdə müəyyən bir dəyərin ilk tapıldığı indeksi tapır.

Qaytarılan dəyər: İndeks nömrəsini qaytarır. Tapılmazsa -1 qaytarır.



let arr = [1, 2, 3, 4];
let index = arr.indexOf(3); // 2
console.log(index);  // 2
Nəticə: indexOf() metodu müəyyən bir elementin ilk indeksini qaytarır. Element tapılmasa -1 qaytarır.

10. find()
İşləmə: Massivdə müəyyən bir şərtə uyğun gələn ilk elementi tapır.

Qaytarılan dəyər: Tapılan ilk elementi qaytarır.



let arr = [1, 2, 3, 4];
let found = arr.find(x => x > 2); // 3
console.log(found);  // 3